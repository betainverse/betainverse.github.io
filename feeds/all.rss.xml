<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>Scripts for structural biology: Scripts for structural biology</title>
  <description>Scripts for structural biology: Scripts for structural biology</description>
  <link>http://www.example.com/index.html</link>
  <lastBuildDate>Tue, 03 Feb 2015 14:48:14 EDT</lastBuildDate>
  <pubDate>Tue, 03 Feb 2015 14:48:14 EDT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Fun little bioinformatics primers</title>
   <link>http://www.example.com/blog/2015/02/03/fun-little-bioinformatics-primers/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2015-02-03-fun-little-bioinformatics-primers</guid>
   <pubDate>Tue, 03 Feb 2015 14:48:14 EDT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;&lt;a href="http://www.liacs.nl/~hoogeboo/mcb/nature_primer.html"&gt;Here&amp;rsquo;s&lt;/a&gt; a great list of primers on various topics in bioinformatics, published in Nature Biotechnology and PloS Computational Biology. Of course, you need access to these journals to read the articles.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>A few useful bioinformatics sites</title>
   <link>http://www.example.com/blog/2014/12/19/a-few-useful-bioinformatics-sites/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-12-19-a-few-useful-bioinformatics-sites</guid>
   <pubDate>Fri, 19 Dec 2014 12:56:29 EDT</pubDate>
   <description>&lt;html&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://prodata.swmed.edu/promals3d/promals3d.php"&gt;PROMALS3D multiple sequence and structure alignment server&lt;/a&gt; is the best tool I have found for sequence-based structure alignments.&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://archaea.u-psud.fr/synttax/"&gt;SyntTax&lt;/a&gt; is a fantastic tool for assessing how operons are conserved across strains or species, and it is great for generating vector graphics of genes and operons.&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://emboss.bioinformatics.nl/cgi-bin/emboss/palindrome"&gt;EMBOSS palindrome finder&lt;/a&gt; is the best tool I&amp;rsquo;ve been able to find for searching for transcription factor binding sites that consist of inverted repeats separated by a gap. It&amp;rsquo;s still tricky to decide on minimum length, gap size, and number of mismatches to get an interpretable set of results.&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://rsat.ulb.ac.be/rsat/retrieve-seq_form.cgi"&gt;RSAT&lt;/a&gt; is useful for fetching intergenic regions upstream or downstream of a gene of interest, but can also be used for fetching the ORF. For example, you might be interested in the sequence upstream of spr1672 to look for regulatory elements. The default parameter is to fetch the whole region upstream of the gene, but you can tune it in other ways. &lt;a href="http://rsat.ulb.ac.be/rsat/"&gt;The parent site&lt;/a&gt; has lots of other tools that are worth exploring. Update: Now the site has been divided according to kingdom. Go to &lt;a href="http://prokaryotes.rsat.eu/"&gt;http://prokaryotes.rsat.eu/&lt;/a&gt; for prokaryotic data.&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://espript.ibcp.fr/ESPript/ESPript/"&gt;ESPript3&lt;/a&gt; is a great tool for making your multiple sequence alignment look pretty, especially if you want to display secondary structure elements from a PDB file across the top.&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://espript.ibcp.fr/ESPript/cgi-bin/ENDscript.cgi"&gt;ENDscript2&lt;/a&gt; is a great tool for a quick and dirty initial look at a PDB entry. It searches the PDB for homologous structures, aligns them, and displays the multiple sequence alignment with the secondary structure elements, solvent accessibility, etc, and gives you pymol scripts or session files showing sequence and structure conservation.&lt;/li&gt;
 &lt;li&gt;There are a lot of approaches to homology modelling. I like BLASTing against the PDB and finding my favorite homologous protein, then going to MODELLER in the &lt;a href="http://toolkit.tuebingen.mpg.de/"&gt;bioinformatics toolkit&lt;/a&gt;, which also has many other useful tools. Sometimes it&amp;rsquo;s painfully picky about silly details of the input format, but it has given me some nice looking results.&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Do you wish you could restrict BLAST results to those genes or organisms that have an NCBI Gene entry that will allow you to explore the genomic context? So do I. I haven&amp;rsquo;t found the answer yet, but restricting a search to organisms listed &lt;a href="http://www.ncbi.nlm.nih.gov/genome/browse/representative/"&gt;here&lt;/a&gt; as representative genomes tends to help. Getting all the tax_ids from &lt;a href="http://www.ncbi.nlm.nih.gov/Taxonomy/TaxIdentifier/tax_identifier.cgi"&gt;here&lt;/a&gt; can help. This permits searching with an unweildy Entrez Query like&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;txid208435 [ORGN] OR txid862971 [ORGN] OR txid888833 [ORGN] OR txid1123298 [ORGN] OR txid482234 [ORGN] OR txid862969 [ORGN] OR txid873449 [ORGN] OR txid889201 [ORGN] OR txid1123301 [ORGN] OR txid904293 [ORGN] OR txid486410 [ORGN] OR txid1123302 [ORGN] OR txid552526 [ORGN] OR txid864569 [ORGN] OR txid1123303 [ORGN] OR txid637909 [ORGN] OR txid467705 [ORGN] OR txid1123304 [ORGN] OR txid764299 [ORGN] OR txid471872 [ORGN] OR txid1069533 [ORGN] OR txid68892 [ORGN] OR txid871237 [ORGN] OR txid1318633 [ORGN] OR txid591365 [ORGN] OR txid1076934 [ORGN] OR txid764298 [ORGN] OR txid1116231 [ORGN] OR txid1123306 [ORGN] OR txid1123307 [ORGN] OR txid1123308 [ORGN] OR txid1123309 [ORGN] OR txid210007 [ORGN] OR txid1302863 [ORGN] OR txid927666 [ORGN] OR txid1123311 [ORGN] OR txid1123312 [ORGN] OR txid760570 [ORGN] OR txid936154 [ORGN] OR txid981540 [ORGN] OR txid888746 [ORGN] OR txid1123313 [ORGN] OR txid171101 [ORGN] OR txid170187 [ORGN] OR txid873448 [ORGN] OR txid1054460 [ORGN] OR txid373153 [ORGN] OR txid910313 [ORGN] OR txid160490 [ORGN] OR txid699248 [ORGN] OR txid347253 [ORGN] OR txid388919 [ORGN] OR txid1123317 [ORGN] OR txid1074052 [ORGN] OR txid1156433 [ORGN] OR txid391295 [ORGN] OR txid568814 [ORGN] OR txid299768 [ORGN] OR txid1123318 [ORGN] OR txid1282664 [ORGN] OR txid218495 [ORGN] OR txid764291 [ORGN] OR txid904306 [ORGN] OR txid365659 [ORGN]&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;!-- more--&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Pymol: sphere representation and ionic radii</title>
   <link>http://www.example.com/blog/2014/12/18/pymol-sphere-representation-and-ionic-radii/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-12-18-pymol-sphere-representation-and-ionic-radii</guid>
   <pubDate>Thu, 18 Dec 2014 11:18:41 EDT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;I just want to point out and reiterate an old &lt;a href="https://www.mail-archive.com/pymol-users@lists.sourceforge.net/msg04718.html"&gt;forum message&lt;/a&gt; about using PyMOL to display ions as spheres. The spheres representation shows the van der Waals radius of an atom. Apparently PyMOL stores the nonionic radii by default, 1.73 A for Mg, for example, rather than 0.71 A for Mg++. If you look up the desired ionic radius:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.webelements.com/nickel/atom_sizes.html"&gt;https://www.webelements.com/nickel/atom_sizes.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can set them in PyMOL using the alter command, to obtain a more appropriate picture:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; PyMOL&amp;gt; alter (elem Ni), vdw=0.83
 PyMOL&amp;gt; rebuild&lt;/code&gt;&lt;/pre&gt;

&lt;div class="figure"&gt;&lt;img src="/img/Ni.png" alt="" /&gt;
 &lt;p class="caption"&gt;&lt;/p&gt;&lt;/div&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Script to show methyls as spheres in Pymol</title>
   <link>http://www.example.com/blog/2014/12/10/script-to-show-methyls-as-spheres-in-pymol/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-12-10-script-to-show-methyls-as-spheres-in-pymol</guid>
   <pubDate>Wed, 10 Dec 2014 09:00:50 EDT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;Here is a pymol script to show methyl groups on your protein as spheres, color-coded by residue type.&lt;/p&gt;

&lt;p&gt;Download the script &lt;a href="https://raw.githubusercontent.com/betainverse/methyls/master/pymol/showmethyls.py"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Usage: Load the script into pymol using the run&amp;hellip; item in the pymol File menu to select this script or load it from the Pymol command line, then actually run it using the showmethyls command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; PyMOL&amp;gt; run /home/userName/path/toscript/showmethyls.py
 PyMOL&amp;gt; showmethyls&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that you can use the cd command on the pymol command line as you would in bash/tcsh, if you don&amp;rsquo;t remember the exact path to the script by heart.&lt;/p&gt;

&lt;div class="figure"&gt;&lt;img src="/img/spherelegend.png" alt="" /&gt;
 &lt;p class="caption"&gt;&lt;/p&gt;&lt;/div&gt;

&lt;div class="figure"&gt;&lt;img src="/img/methyls2.png" alt="" /&gt;
 &lt;p class="caption"&gt;&lt;/p&gt;&lt;/div&gt;&lt;/html&gt;</description></item>
  <item>
   <title>simple linux tutorials</title>
   <link>http://www.example.com/blog/2014/10/30/simple-linux-tutorials/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-10-30-simple-linux-tutorials</guid>
   <pubDate>Thu, 30 Oct 2014 11:58:11 EDT</pubDate>
   <description>&lt;html&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://pgbovine.net/command-line-tutorial.htm"&gt;http://pgbovine.net/command-line-tutorial.htm&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Coloring Methyls in Pymol</title>
   <link>http://www.example.com/blog/2014/10/14/coloring-methyls-in-pymol/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-10-14-coloring-methyls-in-pymol</guid>
   <pubDate>Tue, 14 Oct 2014 15:07:41 EDT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;This post expands on &lt;a href="http://betainverse.github.io/blog/2014/10/13/pymol-color-by-data/"&gt;yesterday&amp;rsquo;s&lt;/a&gt; post that was focused on coloring protein structures by residue in Pymol.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;
  &lt;p&gt;Your data should be in a tab-delimited text file, formatted like this:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;2	ALA	CB	0.03416350
8	ILE	CD1	0.43143940
13	LEU	CD1	0.50597498&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;Make sure you have downloaded data2bfactor.py from &lt;a href="http://pldserver1.biochem.queensu.ca/~rlc/work/pymol/"&gt;http://pldserver1.biochem.queensu.ca/~rlc/work/pymol/&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Open pymol &amp;amp; load your protein structure.&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Run any scripts you want to use:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; run ~/scripts/data2bfactor.py
PyMOL&amp;gt; run ~/scripts/spectrumany.py&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;You may want to set all the b-factor data for your protein to &amp;ndash;1 or to some other number beforehand, because any residues not mentioned in your data file will retain their original crystallographic B-factor:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; alter MyProtein, b=-1&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Define a selection of all your methyls:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; select MyMethyls, (resn ALA and name CB)+(resn ILE and name CD1)+(resn LEU and name CD1+CD2)+(resn MET+MSE and name CE)+(resn VAL and name CG1+CG2)+(resn THR and name CG2)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Display things nicely:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; hide lines
PyMOL&amp;gt; show cartoon
PyMOL&amp;gt; dss
PyMOL&amp;gt; color gray80, MyProtein
PyMOL&amp;gt; show spheres, MyMethyls
PyMOL&amp;gt; show sticks, resn ALA+ILE+LEU+VAL+MET and not (name c,o,n)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Now load your data onto your selection using the data2b_atom function defined within data2bfactor.py.&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; data2b_atom MyMethyls, /Users/username/Documents/datafile.txt&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Apply the color gradient:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; spectrumany b, red yellow, methyls&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;Ray trace, save the image!&lt;/li&gt;&lt;/ol&gt;

&lt;div class="figure"&gt;&lt;img src="/img/methyls.png" alt="" /&gt;
 &lt;p class="caption"&gt;&lt;/p&gt;&lt;/div&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Pymol Color By Data</title>
   <link>http://www.example.com/blog/2014/10/13/pymol-color-by-data/?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-www-example-com:-blog-2014-10-13-pymol-color-by-data</guid>
   <pubDate>Mon, 13 Oct 2014 14:27:13 EDT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;This post expands on &lt;a href="http://kpwu.wordpress.com/2007/11/27/pymol-example-coloring-surface-by-b-factor/"&gt;info&lt;/a&gt; from a few other &lt;a href="http://kpwu.wordpress.com/2012/09/11/pymol-custom-spectrum-colors/"&gt;blog&lt;/a&gt; posts.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;
  &lt;p&gt;Your data should be in a tab-delimited text file, formatted like this:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;3	0.677985
4	0.794402
5	0.972709&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;You may need to remove extra columns and/or headerscan cause problems. If you exported your file from excel, you may have to change your line break format. From a mac, you might see a bunch of ^M characters in your file. You can use a terminal to do one of these commands to fix the file:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;tr '\r' '\n' &amp;lt; macfile.txt &amp;gt; unixfile.txt
tr -d '\r' &amp;lt; windowsfile.txt &amp;gt; unixfile.txt&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;Save this data file to a known location, let&amp;rsquo;s say /Users/username/Documents/datafile.txt. It might make things easier to avoid having spaces in file or folder names. It seems to be important to use the absolute filename, rather than using shortcuts like &lt;code&gt;~&lt;/code&gt;.&lt;/li&gt;
 &lt;li&gt;Download data2bfactor.py from &lt;a href="http://pldserver1.biochem.queensu.ca/~rlc/work/pymol/"&gt;http://pldserver1.biochem.queensu.ca/~rlc/work/pymol/&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Download spectrumany.py from &lt;a href="http://pymolwiki.org/index.php/Spectrumany"&gt;http://pymolwiki.org/index.php/Spectrumany&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Save these scripts to a known location, let&amp;rsquo;s say ~/scripts/.&lt;/li&gt;
 &lt;li&gt;Open pymol &amp;amp; load your protein structure.&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Run the scripts you downloaded using the PyMOL&amp;gt; commandline:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; run ~/scripts/data2bfactor.py
PyMOL&amp;gt; run ~/scripts/spectrumany.py&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Make a named selection for the set of residues you want to color:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; select MyChainA, 3TGN and chain A and not resn Zn&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;You may want to set all the b-factor data for your selection to 0 or to some other number beforehand, because any residues not mentioned in your data file will retain their original crystallographic B-factor:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; alter MyChainA, b=0&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Now load your data onto your selection using the data2b_res function defined within data2bfactor.py:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; data2b_res MyChainA, /Users/username/Documents/datafile.txt&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Now color by B-factor. If you are lucky and the color gradient you want is already included in Pymol, you can use the function spectrum:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; spectrum b, rainbow, MyChainA, minimum=0.6, maximum=1&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;You will need to play around with minimum and maximum to optimize the image according to your data.&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;If you want a color gradient not already defined in Pymol, you will need to use the spectrumany command:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; spectrumany b, red gray80, MyChainA, minimum=0.6,maximum=1&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;Now use the Display menu to make sure the Background is not set to be opaque, and ray trace the image:&lt;/p&gt;
  &lt;pre&gt;&lt;code&gt;PyMOL&amp;gt; ray&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
 &lt;li&gt;Save your image and your session!&lt;/li&gt;&lt;/ol&gt;

&lt;div class="figure"&gt;&lt;img src="/img/Zn_hNOE.png" alt="" /&gt;
 &lt;p class="caption"&gt;&lt;/p&gt;&lt;/div&gt;&lt;/html&gt;</description></item></channel></rss>